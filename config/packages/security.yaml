security:
    password_hashers:
        App\Entity\User:
            algorithm: auto
        Symfony\Component\Security\Core\User\InMemoryUser:
            algorithm: auto

    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        backend_users:
            memory:
                users:
                    kivid-admin@mail.com:
                        {
                            password: "$2y$13$.Sz3REq5YRTGxEcBEvSE0uriYe9e3iChRpPuhGXXxydbwx9M8UKjC",
                            roles: ["ROLE_ADMIN"],
                        }
        patient:
            entity:
                class: App\Entity\Patient
                property: email
        doctor:
            entity:
                class: App\Entity\Doctor
                property: email
        app_user_provider:
            chain:
                providers: ["patient", "doctor", "backend_users"]

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator:
                - App\Security\LoginFormAuthenticator
                - App\Security\GoogleAuthenticator
                - App\Security\FacebookAuthenticator
            logout:
                path: app_logout
                target: app_home
            # remember_me:
            #     secret: '%kernel.secret%'
            #     lifetime: 604800 # 1 week in seconds
            #     path: /
            #     samesite: strict
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication
            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/patient, roles: [ROLE_PATIENT, ROLE_DOCTOR, ROLE_ADMIN] }
        - { path: ^/doctor, roles: [ROLE_DOCTOR, ROLE_ADMIN] }
